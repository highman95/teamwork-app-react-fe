{"version":3,"sources":["constants/helpers.js","components/AuthenticatedRoute.jsx","constants/endpoints.js","components/users/SignIn.jsx","components/Home.jsx","components/posts/CommentForm.jsx","components/posts/Comments.jsx","components/posts/Post.jsx","components/posts/Feed.jsx","components/posts/ArticlePostForm.jsx","components/posts/GifPostForm.jsx","components/posts/DeletePost.jsx","components/users/UserForm.jsx","components/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["isLoggedIn","localStorage","getItem","fetchToken","JSON","parse","token","AuthenticatedRoute","Component","component","rest","render","props","to","pathname","state","from","location","url","signIn","signUp","feeds","articles","gifs","roles","departments","SignIn","isSigningIn","email","password","error","handleChange","bind","handleSignIn","event","target","name","value","this","setState","preventDefault","history","fetchData","method","mode","body","stringify","headers","fetch","endPoints","then","resp","json","result","status","Error","data","firstName","setItem","push","catch","e","message","className","type","onChange","required","onClick","disabled","React","Home","CommentForm","isSaving","comment","handleSave","postType","postId","addComment","undefined","fetchConfig","onCommentSave","commentId","Date","now","authorId","authorName","placeholder","Comments","isLoading","comments","handleCommentsChange","commentsMap","map","key","commentsFromState","postIdFromState","length","defaultProps","Comment","Post","post","id","match","params","fetchPost","showComments","title","article","src","alt","showTrimmed","Feed","fetchFeeds","feedsMap","index","CreateArticlePost","EditArticlePost","ArticlePostForm","addPost","udpatePost","rows","CreateGifPost","GifPostForm","image","files","formData","FormData","append","DeletePost","isDeleting","handleSubmit","deletePost","endpoints","CreateUserAccount","UserForm","isRequesting","jobRoles","lastName","gender","jobRole","department","address","populateFields","result_2","addUser","window","jobRolesMap","role","Math","random","departmentsMap","maxLength","defaultChecked","NotFound","App","path","HomeComponent","exact","FeedComponent","PostComponent","DeletePostComponent","NotFoundComponent","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed7b2d0b.chunk.js","sourcesContent":["export const storageId = 'qoqxTMwk';\r\n\r\nexport const isLoggedIn = (localStorage.getItem(storageId) !== null);\r\n\r\nexport const fetchToken = () => (isLoggedIn ? JSON.parse(localStorage.getItem(storageId)).token : null);\r\n\r\nexport const fetchFirstName = () => (isLoggedIn ? JSON.parse(localStorage.getItem(storageId)).firstName : null);\r\n\r\nexport const registerAuth = ({ token, firstName = '' }) => {\r\n    try {\r\n        localStorage.setItem(storageId, JSON.stringify({ token, firstName }));\r\n        return true;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n};\r\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn } from '../constants/helpers';\n\n/**\n *\n * @see https://jasonwatmore.com/post/2017/09/16/react-redux-user-registration-and-login-tutorial-example\n */\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={\n            (props) => (isLoggedIn ? <Component {...props} /> : <Redirect to={{ pathname: '/', state: { from: props.location } }} />)\n        }\n    />\n);\n\nexport default AuthenticatedRoute;\n","const url = 'https://teamwork-app-api-stage.herokuapp.com/api/v1';\r\n// const url = 'http://localhost:3500/api/v1';\r\n\r\nexport default {\r\n    signIn: `${url}/auth/signin`,\r\n    signUp: `${url}/auth/create-user`,\r\n    feeds: `${url}/feed`,\r\n    articles: `${url}/articles`,\r\n    gifs: `${url}/gifs`,\r\n    roles: `${url}/roles`,\r\n    departments: `${url}/departments`,\r\n};\r\n","import React from 'react';\nimport endPoints from '../../constants/endpoints';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSigningIn: false,\n            email: '',\n            password: '',\n            error: null,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSignIn = this.handleSignIn.bind(this);\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSignIn(event) {\n        event.preventDefault();\n        this.setState({ error: null, isSigningIn: true });\n\n        const { history } = this.props;\n        const { email, password } = this.state;\n        const fetchData = {\n            method: 'POST',\n            mode: 'cors',\n            body: JSON.stringify({ email, password }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        fetch(endPoints.signIn, fetchData).then((resp) => resp.json()).then((result) => {\n            if (result.status === 'error') {\n                throw new Error(result.error);\n            }\n\n            const { token, firstName } = result.data;\n            localStorage.setItem('qoqxTMwk', JSON.stringify({ token, firstName }));\n            this.setState({ error: null, isSigningIn: false, password: '' });\n\n            history.push('/feed');\n        }).catch((e) => this.setState({ error: e.message || e.error.message, isSigningIn: false, password: '' }));\n    }\n\n    render() {\n        const {\n            email, password, isSigningIn, error,\n        } = this.state;\n\n        return (\n            <>\n                {error && <span className=\"message error\">{error}</span>}\n\n                <form>\n                    <div className=\"form-group\">\n                        <label>\n                            E-mail Address:\n                            <input type=\"email\" name=\"email\" value={email} onChange={this.handleChange} required />\n                        </label>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>\n                            Password:\n                            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} required />\n                        </label>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={this.handleSignIn} disabled={isSigningIn}>\n                            {isSigningIn ? 'Signing in...' : 'Sign in'}\n                        </button>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default SignIn;\n","import React from 'react';\nimport SignInComponent from './users/SignIn';\nimport './Home.css';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"home-intro\">\n                    Welcome to the\n                    {' '}\n                    <strong>TeamWork</strong>\n                    {' '}\n                    app\n                </div>\n                <div className=\"home-sign-in\">\n                    <SignInComponent {...this.props} />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport endPoints from '../../constants/endpoints';\r\nimport { fetchToken } from '../../constants/helpers';\r\n\r\nclass CommentForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isSaving: false,\r\n            error: null,\r\n            comment: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ comment: event.target.value });\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n\r\n        const { postType, postId } = this.props;\r\n        const { comment } = this.state;\r\n        this.addComment(comment, postId, postType);\r\n    }\r\n\r\n    async addComment(comment, postId, postType) {\r\n        if (postId !== undefined && postType !== undefined) {\r\n            this.setState({ error: null, isSaving: true });\r\n\r\n            const url = (postType === 'gif') ? endPoints.gifs : endPoints.articles;\r\n            const fetchConfig = {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                body: JSON.stringify({ comment }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: fetchToken(),\r\n                },\r\n            };\r\n\r\n            await fetch(`${url}/${postId}/comment`, fetchConfig).then((resp) => resp.json()).then((result) => {\r\n                if (result.status === 'error') {\r\n                    throw new Error(result.error);\r\n                }\r\n\r\n                const { onCommentSave } = this.props;\r\n                onCommentSave({\r\n                    commentId: Date.now(), comment, authorId: 0, authorName: 'You',\r\n                });\r\n                this.setState({ isSaving: false, error: null, comment: '' });\r\n            }).catch((e) => this.setState({ isSaving: false, error: e.message || e.error.message }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { comment, error, isSaving } = this.state;\r\n\r\n        return (\r\n            <div className=\"comment-form\">\r\n                {error && <span className=\"message error\">{error}</span>}\r\n\r\n                <form>\r\n                    <textarea onChange={this.handleChange} value={comment} placeholder=\"Add a comment...\" disabled={isSaving} />\r\n                    <button type=\"submit\" onClick={this.handleSave} disabled={isSaving}>\r\n                        {isSaving ? 'Saving...' : 'Save'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    postId: PropTypes.string.isRequired,\r\n    postType: PropTypes.string.isRequired,\r\n    onCommentSave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CommentForm from './CommentForm';\r\nimport './Comment.css';\r\n\r\nclass Comments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            comments: [],\r\n            postId: '',\r\n            postType: '',\r\n        };\r\n\r\n        this.handleCommentsChange = this.handleCommentsChange.bind(this);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { comments, postId, postType } = props;\r\n        const { comments: commentsFromState, postId: postIdFromState } = state;\r\n        const hasSamePropsAsState = (comments.length === commentsFromState.length && postId === postIdFromState);\r\n\r\n        return hasSamePropsAsState ? null : { comments, postId, postType };\r\n    }\r\n\r\n    handleCommentsChange(comment) {\r\n        const { comments } = this.state;\r\n        comments.push(comment);\r\n\r\n        this.setState({ ...comments });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isLoading, comments, postId, postType,\r\n        } = this.state;\r\n        const commentsMap = comments && comments.map((comment) => <Comment key={comment.commentId} comment={comment} />);\r\n\r\n        return (\r\n            <>\r\n                {isLoading\r\n                    ? <div className=\"loading-box\">Loading Comments...</div>\r\n                    : (\r\n                        <div className=\"post-comments-box\">\r\n                            {commentsMap}\r\n                            <CommentForm postId={postId} postType={postType} onCommentSave={this.handleCommentsChange} />\r\n                        </div>\r\n                    )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nComments.defaultProps = {\r\n    comments: [],\r\n    postId: '',\r\n    postType: '',\r\n};\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array,\r\n    postId: PropTypes.string.isRequired,\r\n    postType: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Comment = ({ comment }) => (\r\n    <div className=\"comment-wrapper\">\r\n        <div className=\"comment-box\">{comment.comment}</div>\r\n        <div className=\"author-box\">\r\n            {comment.authorName || `User-${comment.authorId}`}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CommentsComponent from './Comments';\r\nimport endPoints from '../../constants/endpoints';\r\nimport { fetchToken } from '../../constants/helpers';\r\nimport './Post.css';\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            error: null,\r\n            post: {\r\n                comments: [],\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { post } = this.props;\r\n\r\n        if (post.id !== undefined) {\r\n            this.setState({ post });\r\n        } else {\r\n            const { match: { params: { postType, postId } } } = this.props;\r\n            this.fetchPost(postId, postType);\r\n        }\r\n    }\r\n\r\n    async fetchPost(postId, postType) {\r\n        if (postId !== undefined && postType !== undefined) {\r\n            this.setState({ error: null, isLoading: true });\r\n\r\n            const url = (postType === 'gif') ? endPoints.gifs : endPoints.articles;\r\n            const fetchConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: fetchToken(),\r\n                },\r\n            };\r\n\r\n            await fetch(`${url}/${postId}`, fetchConfig).then((resp) => resp.json()).then((result) => {\r\n                if (result.status === 'error') {\r\n                    throw new Error(result.error);\r\n                }\r\n\r\n                this.setState({ isLoading: false, error: null, post: result.data });\r\n            }).catch((e) => this.setState({ isLoading: false, error: e.message || e.error.message }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { showComments } = this.props;\r\n        const { isLoading, error, post } = this.state;\r\n        const { comments } = post;\r\n\r\n        return (\r\n            <>\r\n                {error && <span className=\"message error\">{error}</span>}\r\n\r\n                {isLoading\r\n                    ? <div className=\"loading-box\">Loading Post...</div>\r\n                    : (post\r\n                        ? (\r\n                            <div className=\"\">\r\n                                <div className=\"post-title\">\r\n                                    <Link to={`/post/${post.type}/${post.id}`}>{post.title}</Link>\r\n                                    <div className=\"post-task-link\">\r\n                                        {(post.type === 'article') && <Link to={`/${post.type}/edit/${post.id}`} className=\"edit-link\">Edit</Link>}\r\n                                        <Link to={`/${post.type}/delete/${post.id}`} className=\"delete-link\">Delete</Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"post-content\">\r\n                                    {post.article !== undefined\r\n                                        ? <div className=\"post-content-text\">{post.article}</div>\r\n                                        : <img src={post.url} alt={`${post.title}-${Date.now()}`} className=\"post-content-image\" />}\r\n                                </div>\r\n\r\n                                {showComments && <CommentsComponent comments={comments} postId={post.id} postType={post.type} />}\r\n                            </div>\r\n                        )\r\n                        : <h4>Post does not exist...</h4>)}\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPost.defaultProps = {\r\n    showComments: true,\r\n    showTrimmed: false,\r\n    post: {},\r\n};\r\n\r\nPost.propTypes = {\r\n    showComments: PropTypes.bool,\r\n    showTrimmed: PropTypes.bool,\r\n    post: PropTypes.object || null,\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from './Post';\r\nimport endPoints from '../../constants/endpoints';\r\nimport { fetchToken } from '../../constants/helpers';\r\n\r\nclass Feed extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            error: null,\r\n            feeds: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchFeeds();\r\n    }\r\n\r\n    async fetchFeeds() {\r\n        this.setState({ error: null, isLoading: true });\r\n\r\n        const fetchConfig = {\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                token: fetchToken(),\r\n            },\r\n        };\r\n\r\n        await fetch(endPoints.feeds, fetchConfig).then((resp) => resp.json()).then((result) => {\r\n            if (result.status === 'error') {\r\n                throw new Error(result.error);\r\n            }\r\n\r\n            this.setState({ isLoading: false, error: null, feeds: result.data });\r\n        }).catch((e) => this.setState({ isLoading: false, error: e.message || e.error.message }));\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, error, feeds } = this.state;\r\n        const feedsMap = feeds.map((post, index) => <Post key={index} showComments={false} post={post} />);\r\n\r\n        return (\r\n            <>\r\n                {error && <span className=\"message error\">{error}</span>}\r\n\r\n                {isLoading\r\n                    ? <div className=\"loading-box\">Loading Feeds...</div>\r\n                    : feedsMap}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\n\r\nimport endPoints from '../../constants/endpoints';\r\nimport { fetchToken } from '../../constants/helpers';\r\nimport './PostForm.css';\r\nimport './Post.css';\r\n\r\nexport function CreateArticlePost() {\r\n    return (\r\n        <>\r\n            <h3>Add Article</h3>\r\n            <hr />\r\n            <ArticlePostForm />\r\n        </>\r\n    );\r\n}\r\n\r\nexport function EditArticlePost(props) {\r\n    const { postId } = props.match.params;\r\n    return (\r\n        <>\r\n            <h3>Edit Article</h3>\r\n            <hr />\r\n            <ArticlePostForm postId={postId} />\r\n        </>\r\n    );\r\n}\r\n\r\nclass ArticlePostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isSaving: false,\r\n            message: null,\r\n            error: null,\r\n            title: '',\r\n            article: '',\r\n            postId: props.postId || 0\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { postId, isSaving } = this.state;\r\n\r\n        if (postId !== 0) {\r\n            this.setState({ isSaving: true });\r\n            this.fetchPost(postId, 'article');\r\n            this.setState({ isSaving });\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n\r\n        const { title, article, postId } = this.state;\r\n\r\n        if (postId === 0) {\r\n            this.addPost(title, article);\r\n        } else {\r\n            this.udpatePost(postId, title, article)\r\n        }\r\n    }\r\n\r\n    async addPost(title, article) {\r\n        if (title !== undefined && article !== undefined) {\r\n            this.setState({ isSaving: true, message: null, error: null });\r\n\r\n            const fetchConfig = {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                body: JSON.stringify({ title, article }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: fetchToken(),\r\n                },\r\n            };\r\n\r\n            await fetch(`${endPoints.articles}`, fetchConfig).then((resp) => resp.json()).then((result) => {\r\n                if (result.status === 'error') {\r\n                    throw new Error(result.error);\r\n                }\r\n\r\n                // const showPost = () => {\r\n                //     return (\r\n                //         <div className=\"post-title\">\r\n                //             <Link to={`/post/article/${articleId}`}>{title}</Link>\r\n                //         </div>\r\n                //     );\r\n                // };\r\n\r\n                const { message } = result.data;\r\n                // document.querySelector('#post-form-reporter').innerHTML += showPost();\r\n\r\n                this.setState({ isSaving: false, message, error: null, title: '', article: '' });\r\n            }).catch((e) => this.setState({ isSaving: false, message: null, error: e.message || e.error.message }));\r\n        }\r\n    }\r\n\r\n    async fetchPost(postId, postType) {\r\n        if (postId !== undefined && postId !== 0 && postType !== undefined) {\r\n            this.setState({ error: null, isLoading: true });\r\n\r\n            const url = (postType === 'gif') ? endPoints.gifs : endPoints.articles;\r\n            const fetchConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: fetchToken(),\r\n                },\r\n            };\r\n\r\n            await fetch(`${url}/${postId}`, fetchConfig).then((resp) => resp.json()).then((result) => {\r\n                if (result.status === 'error') {\r\n                    throw new Error(result.error);\r\n                }\r\n\r\n                const { title, article } = result.data;\r\n                this.setState({ isLoading: false, error: null, title, article });\r\n            }).catch((e) => this.setState({ isLoading: false, error: e.message || e.error.message }));\r\n        }\r\n    }\r\n\r\n    async udpatePost(postId, title, article) {\r\n        if (postId !== undefined && title !== undefined && article !== undefined) {\r\n            this.setState({ isSaving: true, message: null, error: null });\r\n\r\n            const fetchConfig = {\r\n                method: 'PATCH',\r\n                mode: 'cors',\r\n                body: JSON.stringify({ title, article }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: fetchToken(),\r\n                },\r\n            };\r\n\r\n            await fetch(`${endPoints.articles}/${postId}`, fetchConfig).then((resp) => resp.json()).then((result) => {\r\n                if (result.status === 'error') {\r\n                    throw new Error(result.error);\r\n                }\r\n\r\n                const { message } = result.data;\r\n                this.setState({ isSaving: false, message, error: null });\r\n            }).catch((e) => this.setState({ isSaving: false, message: null, error: e.message || e.error.message }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isSaving, message, error, title, article } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"post-form-wrapper\">\r\n                    {message && <span className=\"message success\">{message}</span>}\r\n                    {error && <span className=\"message error\">{error}</span>}\r\n\r\n                    <div className=\"post-form-display\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>\r\n                                    Title:\r\n                                <input type=\"text\" name=\"title\" value={title} onChange={this.handleChange} required disabled={isSaving} />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>\r\n                                    Content:\r\n                                <textarea name=\"article\" rows=\"7\" value={article} onChange={this.handleChange} required disabled={isSaving} />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" onClick={this.handleSave} disabled={isSaving}>\r\n                                    {isSaving ? 'Saving...' : 'Save'}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div id=\"post-form-reporter\"></div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport endPoints from '../../constants/endpoints';\r\nimport { fetchToken } from '../../constants/helpers';\r\nimport './PostForm.css';\r\nimport './Post.css';\r\n\r\nexport function CreateGifPost() {\r\n    return (\r\n        <>\r\n            <h3>Add Gif</h3>\r\n            <hr />\r\n            <GifPostForm />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nclass GifPostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isSaving: false,\r\n            message: null,\r\n            error: null,\r\n            title: '',\r\n            image: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let { name, value, type, files } = event.target;\r\n        value = (type === 'file') ? files[0] : value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n\r\n        const { title, image } = this.state;\r\n        this.addPost(title, image);\r\n    }\r\n\r\n    async addPost(title, image) {\r\n        if (title !== undefined && image !== undefined) {\r\n            this.setState({ isSaving: true, message: null, error: null });\r\n\r\n            const formData = new FormData();\r\n            formData.append('title', title);\r\n            formData.append('image', image);\r\n\r\n            const fetchConfig = {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                body: formData,\r\n                headers: {\r\n                    token: fetchToken(),\r\n                },\r\n            };\r\n\r\n            await fetch(`${endPoints.gifs}`, fetchConfig).then((resp) => resp.json()).then((result) => {\r\n                if (result.status === 'error') {\r\n                    throw new Error(result.error);\r\n                }\r\n\r\n                const { message } = result.data;\r\n                this.setState({ isSaving: false, message, error: null, title: '', image: '' });\r\n            }).catch((e) => this.setState({ isSaving: false, message: null, error: e.message || e.error.message }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isSaving, message, error, title } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"post-form-wrapper\">\r\n                    {message && <span className=\"message success\">{message}</span>}\r\n                    {error && <span className=\"message error\">{error}</span>}\r\n\r\n                    <div className=\"post-form-display\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>\r\n                                    Title:\r\n                                    <input type=\"text\" name=\"title\" value={title} onChange={this.handleChange} required disabled={isSaving} />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>\r\n                                    Image:\r\n                                    <input type=\"file\" name=\"image\" onChange={this.handleChange} required disabled={isSaving} />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button type=\"submit\" onClick={this.handleSave} disabled={isSaving}>\r\n                                    {isSaving ? 'Saving...' : 'Save'}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div id=\"post-form-reporter\"></div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport endPoints from '../../constants/endpoints';\r\nimport { fetchToken } from '../../constants/helpers';\r\nimport endpoints from '../../constants/endpoints';\r\n\r\nclass DeletePost extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isDeleting: false,\r\n            message: null,\r\n            error: null,\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const { postId, postType } = this.props.match.params;\r\n        this.deletePost(postId, postType);\r\n    }\r\n\r\n    async deletePost(postId, postType) {\r\n        if (postId !== undefined && postType !== undefined) {\r\n            this.setState({ isDeleting: true });\r\n\r\n            const url = (postType === 'gif') ? endPoints.gifs : endpoints.articles;\r\n            const fetchConfig = {\r\n                method: 'DELETE',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    token: fetchToken(),\r\n                }\r\n            };\r\n\r\n            await fetch(`${url}/${postId}`, fetchConfig).then(resp => resp.json()).then(result => {\r\n                if (result.status === 'error') {\r\n                    throw new Error(result.error);\r\n                }\r\n\r\n                this.setState({ isDeleting: false, error: null, message: result.data.message });\r\n            }).catch((e) => this.setState({ isDeleting: false, message: null, error: e.message || e.error.message }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { postType } = this.props.match.params;\r\n        const { isDeleting, message, error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {message && <span className=\"message success\">{message}</span>}\r\n                {error && <span className=\"message error\">{error}</span>}\r\n\r\n                <div>\r\n                    <div>Are you sure you want to delete the <strong>{postType}</strong> Post?</div>\r\n\r\n                    <button type=\"submit\" onClick={this.handleSubmit} disabled={isDeleting}>\r\n                        {isDeleting ? 'Deleting' : 'Continue'}\r\n                    </button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeletePost;\r\n","import React from 'react';\r\nimport endPoints from '../../constants/endpoints';\r\nimport { storageId, isLoggedIn } from '../../constants/helpers';\r\n\r\nexport function CreateUserAccount() {\r\n    return (\r\n        <>\r\n            <h3>Register User Account</h3>\r\n            <hr />\r\n            <UserForm />\r\n        </>\r\n    );\r\n}\r\n\r\nclass UserForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isRequesting: false,\r\n            message: null,\r\n            error: null,\r\n            jobRoles: [],\r\n            departments: [],\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            gender: 'male',\r\n            jobRole: null,\r\n            department: null,\r\n            address: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateFields();\r\n    }\r\n\r\n    async populateFields() {\r\n        this.setState({ isRequesting: true });\r\n        const fetchConfig = {\r\n            mode: 'cors',\r\n        };\r\n\r\n        await fetch(endPoints.roles, fetchConfig).then(resp => resp.json()).then(result => {\r\n            fetch(endPoints.departments, fetchConfig).then(resp => resp.json()).then(result_2 => {\r\n                const jobRoles = result.data;\r\n                const departments = result_2.data;\r\n\r\n                this.setState({ isRequesting: false, jobRole: jobRoles[0].name, jobRoles, department: departments[0].name, departments });\r\n            }).catch((e) => this.setState({ error: e.message || e.error.message, isRequesting: false }));\r\n        }).catch((e) => this.setState({ error: e.message || e.error.message, isRequesting: false }));\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const { firstName, lastName, email, password, gender, jobRole, department, address } = this.state;\r\n        this.addUser(firstName, lastName, email, password, gender, jobRole, department, address);\r\n    }\r\n\r\n    async addUser(firstName, lastName, email, password, gender, jobRole, department, address) {\r\n        this.setState({ isRequesting: true, message: null });\r\n        const fetchConfig = {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            body: JSON.stringify({ firstName, lastName, email, password, gender, jobRole, department, address }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        };\r\n\r\n        await fetch(endPoints.signUp, fetchConfig).then(resp => resp.json()).then(result => {\r\n            if (result.status === 'error') {\r\n                throw new Error(result.error);\r\n            }\r\n\r\n            const { message, token, firstName } = result.data;\r\n            this.setState({ isRequesting: false, message, error: null, firstName: '', lastName: '', email: '', password: '', gender: '', jobRole: '', department: '', address: '' });\r\n\r\n            if (!isLoggedIn) {\r\n                localStorage.setItem(storageId, JSON.stringify({ token, firstName }));\r\n                window.location = '/feed';\r\n            }\r\n        }).catch((e) => this.setState({ isRequesting: false, error: e.message || e.error.message }));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            firstName, lastName, email, password, jobRole, department, address,\r\n            isRequesting, message, error, jobRoles, departments,\r\n        } = this.state;\r\n\r\n        const jobRolesMap = jobRoles && jobRoles.map(role => <option key={Math.random()} value={role.id}>{role.name}</option>)\r\n        const departmentsMap = departments && departments.map(department => <option key={Math.random()} value={department.id}>{department.name}</option>)\r\n\r\n        return (\r\n            <>\r\n                {message && <span className=\"message success\">{message}</span>}\r\n                {error && <span className=\"message error\">{error}</span>}\r\n\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            First Name:\r\n                            <input type=\"text\" name=\"firstName\" value={firstName} onChange={this.handleChange} disabled={isRequesting} required />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Last Name:\r\n                            <input type=\"text\" name=\"lastName\" value={lastName} onChange={this.handleChange} disabled={isRequesting} required />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Email Address:\r\n                            <input type=\"email\" name=\"email\" value={email} onChange={this.handleChange} disabled={isRequesting} required />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Password:\r\n                            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} disabled={isRequesting} required />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        Gender:<br />\r\n                        <label>\r\n                            <input type=\"radio\" name=\"gender\" value=\"male\" onChange={this.handleChange} maxLength=\"6\" disabled={isRequesting} defaultChecked /> Male\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            <input type=\"radio\" name=\"gender\" value=\"female\" onChange={this.handleChange} maxLength=\"6\" disabled={isRequesting} /> Female\r\n                        </label>\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Job Role:\r\n                            <select name=\"jobRole\" value={jobRole} onChange={this.handleChange} disabled={isRequesting} required>\r\n                                {jobRolesMap}\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Department:\r\n                            <select name=\"department\" value={department} onChange={this.handleChange} disabled={isRequesting} required>\r\n                                {departmentsMap}\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>\r\n                            Address:\r\n                            <textarea name=\"address\" value={address} onChange={this.handleChange} disabled={isRequesting} required />\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" onClick={this.handleSubmit} disabled={isRequesting}>\r\n                            {isRequesting ? 'Saving...' : 'Save'}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\n\nclass NotFound extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <>\n                <h3>Oops!!!</h3>\n                <div>This page no longer exists...</div>\n            </>\n        );\n    }\n}\n\nexport default NotFound;\n","import React from 'react';\r\nimport { Switch, Route, Link, NavLink } from 'react-router-dom';\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\r\nimport './App.css';\r\n\r\nimport HomeComponent from './components/Home';\r\nimport FeedComponent from './components/posts/Feed';\r\nimport PostComponent from './components/posts/Post';\r\nimport { CreateArticlePost, EditArticlePost } from './components/posts/ArticlePostForm';\r\nimport { CreateGifPost } from './components/posts/GifPostForm';\r\nimport DeletePostComponent from './components/posts/DeletePost';\r\nimport { CreateUserAccount } from './components/users/UserForm'\r\nimport NotFoundComponent from './components/NotFound';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"app-header\">\r\n                    <Link to=\"/\">\r\n                        <span id=\"app-logo\">TeamWork</span>\r\n                    </Link>\r\n\r\n                    <div className=\"nav-menu-wrapper\">\r\n                        <ul className=\"nav-menu\">\r\n                            <li><NavLink to=\"/\">Home</NavLink></li>\r\n                            <li><NavLink to=\"/feed\">Feed</NavLink></li>\r\n                            <li><NavLink to=\"/article/create\">Add Article</NavLink></li>\r\n                            <li><NavLink to=\"/gif/create\">Add Gif</NavLink></li>\r\n                            <li><NavLink to=\"/user/create\">Add User</NavLink></li>\r\n                            <li><NavLink to=\"/logout\">Logout</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </header>\r\n\r\n                <div className=\"app-content-wrapper\">\r\n                    <Switch>\r\n                        <Route path=\"/\" component={HomeComponent} exact />\r\n                        <AuthenticatedRoute path=\"/feed\" component={FeedComponent} exact />\r\n                        <AuthenticatedRoute path=\"/article/create\" component={CreateArticlePost} exact />\r\n                        <AuthenticatedRoute path=\"/article/edit/:postId\" component={EditArticlePost} exact />\r\n                        <AuthenticatedRoute path=\"/gif/create\" component={CreateGifPost} exact />\r\n                        <AuthenticatedRoute path=\"/post/:postType/:postId\" component={PostComponent} exact />\r\n                        <AuthenticatedRoute path=\"/:postType/delete/:postId\" component={DeletePostComponent} exact />\r\n                        <Route path=\"/user/create\" component={CreateUserAccount} exact />\r\n                        <Route path=\"*\" component={NotFoundComponent} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n                        + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker.register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl).then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then((registration) => {\n                registration.unregister().then(() => {\n                    window.location.reload();\n                });\n            });\n        } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl, config);\n        }\n    }).catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}