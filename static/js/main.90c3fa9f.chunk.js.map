{"version":3,"sources":["constants/helpers.js","components/AuthenticatedRoute.jsx","constants/endpoints.js","components/users/SignIn.jsx","components/Home.jsx","components/posts/CommentForm.jsx","components/posts/Comments.jsx","components/posts/Post.jsx","components/posts/Feed.jsx","components/posts/ArticlePostForm.jsx","components/posts/GifPostForm.jsx","components/posts/DeletePost.jsx","components/users/UserForm.jsx","components/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["isLoggedIn","localStorage","getItem","fetchToken","JSON","parse","token","handleErrorResult","error","includes","Error","signOut","fetchBot","endPoints","options","a","fetch","response","json","result","status","removeItem","window","location","AuthenticatedRoute","Component","component","rest","render","props","to","pathname","state","from","url","signIn","signUp","feeds","articles","gifs","roles","departments","SignIn","isSigningIn","email","password","handleChange","bind","handleSubmit","event","target","name","value","this","setState","preventDefault","fetchData","method","mode","body","stringify","headers","data","firstName","setItem","message","className","type","onChange","required","onClick","disabled","React","Home","CommentForm","isSaving","comment","handleSave","postType","postId","addComment","undefined","endPointX","fetchConfig","onCommentSave","commentId","Date","now","authorId","authorName","placeholder","Comments","isLoading","comments","handleCommentsChange","push","commentsMap","map","key","commentsFromState","postIdFromState","length","defaultProps","Comment","Post","post","id","match","params","fetchPost","showComments","article","title","src","alt","Feed","fetchFeeds","feedsMap","CreateArticlePost","EditArticlePost","ArticlePostForm","addPost","updatePost","rows","CreateGifPost","GifPostForm","image","files","formData","FormData","append","DeletePost","isDeleting","deletePost","CreateUserAccount","UserForm","isRequesting","jobRoles","lastName","gender","jobRole","department","address","populateFields","result2","addUser","jobRolesMap","role","Math","random","departmentsMap","departmenti","maxLength","defaultChecked","NotFound","App","logOut","path","HomeComponent","exact","FeedComponent","PostComponent","DeletePostComponent","NotFoundComponent","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90c3fa9f.chunk.js","sourcesContent":["export const storageId = 'qoqxTMwk';\n\nexport const isLoggedIn = (localStorage.getItem(storageId) !== null);\n\nexport const fetchToken = () => (isLoggedIn ? JSON.parse(localStorage.getItem(storageId)).token : null);\n\nexport const fetchFirstName = () => (isLoggedIn ? JSON.parse(localStorage.getItem(storageId)).firstName : null);\n\nexport const registerAuth = ({ token, firstName = '' }) => {\n    try {\n        localStorage.setItem(storageId, JSON.stringify({ token, firstName }));\n        return true;\n    } catch (error) {\n        return false;\n    }\n};\n\nexport const handleErrorResult = (error) => {\n    const isJWTExpired = error.includes('expired') && error.includes('jwt')\n\n    if (!isJWTExpired) {\n        throw new Error(error);\n    }\n\n    signOut();\n};\n\nexport const fetchBot = async (endPoints, options) => {\n    const response = await fetch(endPoints, options)\n    const result = await response.json()\n\n    if (result.status === 'error') {\n        handleErrorResult(result.error);\n    }\n\n    return result\n};\n\nexport const signOut = () => {\n    localStorage.removeItem(storageId);\n    window.location = '/';\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn } from '../constants/helpers';\n\n/**\n *\n * @see https://jasonwatmore.com/post/2017/09/16/react-redux-user-registration-and-login-tutorial-example\n */\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={\n            (props) => (isLoggedIn ? <Component {...props} /> : <Redirect to={{ pathname: '/', state: { from: props.location } }} />)\n        }\n    />\n);\n\nexport default AuthenticatedRoute;\n","const url = 'https://teamwork-app-api-stage.herokuapp.com/api/v1';\n// const url = 'http://localhost:3500/api/v1';\n\nexport default {\n    signIn: `${url}/auth/signin`,\n    signUp: `${url}/auth/create-user`,\n    feeds: `${url}/feed`,\n    articles: `${url}/articles`,\n    gifs: `${url}/gifs`,\n    roles: `${url}/roles`,\n    departments: `${url}/departments`,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport endPoints from '../../constants/endpoints';\nimport { storageId, fetchBot } from '../../constants/helpers';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSigningIn: false,\n            email: '',\n            password: '',\n            error: null,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const { email, password } = this.state;\n        this.signIn(email, password)\n    }\n\n    async signIn(email, password) {\n        this.setState({ error: null, isSigningIn: true });\n        const fetchData = {\n            method: 'POST',\n            mode: 'cors',\n            body: JSON.stringify({ email, password }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        try {\n            const result = await fetchBot(endPoints.signIn, fetchData)\n            this.setState({ error: null, isSigningIn: false, password: '' });\n\n            const { token, firstName } = result.data;\n            localStorage.setItem(storageId, JSON.stringify({ token, firstName }));\n            window.location = '/feed';\n        } catch (e) {\n            this.setState({ error: e.message || e.error.message, isSigningIn: false, password: '' })\n        }\n    }\n\n    render() {\n        const {\n            email, password, isSigningIn, error,\n        } = this.state;\n\n        return (\n            <>\n                {error && <span className=\"message error\">{error}</span>}\n\n                <form>\n                    <div className=\"form-group\">\n                        <label>\n                            E-mail Address:\n                            <input type=\"email\" name=\"email\" value={email} onChange={this.handleChange} required />\n                        </label>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>\n                            Password:\n                            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} required />\n                        </label>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={this.handleSubmit} disabled={isSigningIn}>\n                            {isSigningIn ? 'Signing in...' : 'Sign in'}\n                        </button>\n                        {' '}\n                        <Link to=\"/user/create\">Sign UP!</Link>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default SignIn;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { isLoggedIn } from '../constants/helpers';\nimport SignInComponent from './users/SignIn';\nimport './Home.css';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        if (isLoggedIn) {\n            return <Redirect to=\"/feed\" />;\n        }\n\n        return (\n            <>\n                <div className=\"home-intro\">\n                    Welcome to the\n                    {' '}\n                    <strong>TeamWork</strong>\n                    {' '}\n                    app\n                </div>\n                <div className=\"home-sign-in\">\n                    <SignInComponent {...this.props} />\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport endPoints from '../../constants/endpoints';\nimport { fetchToken, fetchBot } from '../../constants/helpers';\n\nclass CommentForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSaving: false,\n            error: null,\n            comment: '',\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ comment: event.target.value });\n    }\n\n    handleSave(event) {\n        event.preventDefault();\n\n        const { postType, postId } = this.props;\n        const { comment } = this.state;\n        this.addComment(comment, postId, postType);\n    }\n\n    async addComment(comment, postId, postType) {\n        if (postId !== undefined && postType !== undefined) {\n            this.setState({ error: null, isSaving: true });\n\n            const endPointX = (postType === 'gif') ? endPoints.gifs : endPoints.articles;\n            const fetchConfig = {\n                method: 'POST',\n                mode: 'cors',\n                body: JSON.stringify({ comment }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    token: fetchToken(),\n                },\n            };\n\n            try {\n                await fetchBot(`${endPointX}/${postId}/comment`, fetchConfig)\n\n                const { onCommentSave } = this.props;\n                onCommentSave({\n                    commentId: Date.now(), comment, authorId: 0, authorName: 'You',\n                });\n                this.setState({ isSaving: false, error: null, comment: '' });\n            } catch (e) {\n                this.setState({ isSaving: false, error: e.message || e.error.message })\n            }\n        }\n    }\n\n    render() {\n        const { comment, error, isSaving } = this.state;\n\n        return (\n            <div className=\"comment-form\">\n                {error && <span className=\"message error\">{error}</span>}\n\n                <form>\n                    <textarea onChange={this.handleChange} value={comment} placeholder=\"Add a comment...\" disabled={isSaving} />\n                    <button type=\"submit\" onClick={this.handleSave} disabled={isSaving}>\n                        {isSaving ? 'Saving...' : 'Save'}\n                    </button>\n                    {' '}\n                    <small><Link to='/feed'>Feed &rarr;</Link></small>\n                </form>\n            </div>\n        );\n    }\n}\n\nCommentForm.propTypes = {\n    postId: PropTypes.string.isRequired,\n    postType: PropTypes.string.isRequired,\n    onCommentSave: PropTypes.func.isRequired,\n};\n\nexport default CommentForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CommentForm from './CommentForm';\nimport './Comment.css';\n\nclass Comments extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            comments: [],\n            postId: '',\n            postType: '',\n        };\n\n        this.handleCommentsChange = this.handleCommentsChange.bind(this);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { comments, postId, postType } = props;\n        const { comments: commentsFromState, postId: postIdFromState } = state;\n        const hasSamePropsAsState = (comments.length === commentsFromState.length && postId === postIdFromState);\n\n        return hasSamePropsAsState ? null : { comments, postId, postType };\n    }\n\n    handleCommentsChange(comment) {\n        const { comments } = this.state;\n        comments.push(comment);\n\n        this.setState({ ...comments });\n    }\n\n    render() {\n        const {\n            isLoading, comments, postId, postType,\n        } = this.state;\n        const commentsMap = comments && comments.map((comment) => <Comment key={comment.commentId} comment={comment} />);\n\n        return (\n            <>\n                {isLoading\n                    ? <div className=\"loading-box\">Loading Comments...</div>\n                    : (\n                        <div className=\"post-comments-box\">\n                            {commentsMap}\n                            <CommentForm postId={postId} postType={postType} onCommentSave={this.handleCommentsChange} />\n                        </div>\n                    )}\n            </>\n        );\n    }\n}\n\nComments.defaultProps = {\n    comments: [],\n    postId: '',\n    postType: '',\n};\n\nComments.propTypes = {\n    comments: PropTypes.array,\n    postId: PropTypes.string.isRequired,\n    postType: PropTypes.string.isRequired,\n};\n\nconst Comment = ({ comment }) => (\n    <div className=\"comment-wrapper\">\n        <div className=\"comment-box\">{comment.comment}</div>\n        <div className=\"author-box\">\n            {comment.authorName || `User-${comment.authorId}`}\n        </div>\n    </div>\n);\n\nexport default Comments;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport CommentsComponent from './Comments';\nimport endPoints from '../../constants/endpoints';\nimport { fetchToken, fetchBot } from '../../constants/helpers';\nimport './Post.css';\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            error: null,\n            post: {\n                comments: [],\n            },\n        };\n    }\n\n    componentDidMount() {\n        const { post } = this.props;\n\n        if (post.id !== undefined) {\n            this.setState({ post });\n        } else {\n            const { match: { params: { postType, postId } } } = this.props;\n            this.fetchPost(postId, postType);\n        }\n    }\n\n    async fetchPost(postId, postType) {\n        if (postId !== undefined && postType !== undefined) {\n            this.setState({ error: null, isLoading: true });\n\n            const endPointX = (postType === 'gif') ? endPoints.gifs : endPoints.articles;\n            const fetchConfig = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    token: fetchToken(),\n                },\n            };\n\n            try {\n                const result = await fetchBot(`${endPointX}/${postId}`, fetchConfig)\n                this.setState({ isLoading: false, error: null, post: result.data });\n            } catch (e) {\n                this.setState({ isLoading: false, error: e.message || e.error.message })\n            }\n        }\n    }\n\n    render() {\n        const { showComments } = this.props;\n        const { isLoading, error, post = {} } = this.state;\n        const { comments } = post;\n        const postType = post.article ? 'article' : 'gif';\n\n        return (\n            <>\n                {error && <span className=\"message error\">{error}</span>}\n\n                {isLoading\n                    ? <div className=\"loading-box\">Loading Post...</div>\n                    : (post\n                        ? (\n                            <div className=\"\">\n                                <div className=\"post-title\">\n                                    <Link to={`/post/${postType}/${post.id}`}>{post.title}</Link>\n                                    <div className=\"post-task-link\">\n                                        {!!post.article\n                                            && <Link to={`/${postType}/edit/${post.id}`} className=\"edit-link\">Edit</Link>}\n                                        <Link to={`/${postType}/delete/${post.id}`} className=\"delete-link\">Delete</Link>\n                                    </div>\n                                </div>\n\n                                <div className=\"post-content\">\n                                    {!!post.article\n                                        ? <div className=\"post-content-text\">{post.article}</div>\n                                        : <img src={post.url} alt={`${post.title}-${Date.now()}`} className=\"post-content-image\" />}\n                                </div>\n\n                                {showComments && <CommentsComponent comments={comments} postId={post.id} postType={postType} />}\n                            </div>\n                        )\n                        : <h4>Post does not exist...</h4>)}\n\n            </>\n        );\n    }\n}\n\nPost.defaultProps = {\n    showComments: true,\n    // showTrimmed: false,\n    post: {},\n};\n\nPost.propTypes = {\n    showComments: PropTypes.bool,\n    // showTrimmed: PropTypes.bool,\n    post: PropTypes.object || null,\n};\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post';\nimport endPoints from '../../constants/endpoints';\nimport { fetchToken, fetchBot } from '../../constants/helpers';\n\nclass Feed extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            error: null,\n            feeds: [],\n        };\n    }\n\n    componentDidMount() {\n        this.fetchFeeds();\n    }\n\n    async fetchFeeds() {\n        this.setState({ error: null, isLoading: true });\n\n        const fetchConfig = {\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                token: fetchToken(),\n            },\n        };\n\n        try {\n            const result = await fetchBot(endPoints.feeds, fetchConfig)\n            this.setState({ isLoading: false, error: null, feeds: result.data });\n        } catch (e) {\n            this.setState({ isLoading: false, error: e.message || e.error.message })\n        }\n    }\n\n    render() {\n        const { isLoading, error, feeds } = this.state;\n        const feedsMap = feeds.map((post) => <Post key={post.id} showComments={false} post={post} />);\n\n        return (\n            <>\n                {error && <span className=\"message error\">{error}</span>}\n\n                {isLoading\n                    ? <div className=\"loading-box\">Loading Feeds...</div>\n                    : feedsMap}\n            </>\n        );\n    }\n}\n\nexport default Feed;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport endPoints from '../../constants/endpoints';\nimport { fetchToken, fetchBot } from '../../constants/helpers';\nimport './PostForm.css';\nimport './Post.css';\n\nexport function CreateArticlePost() {\n    return (\n        <>\n            <h3>Add Article</h3>\n            <hr />\n            <ArticlePostForm />\n        </>\n    );\n}\n\nexport function EditArticlePost(props) {\n    const { postId } = props.match.params;\n    return (\n        <>\n            <h3>Edit Article</h3>\n            <hr />\n            <ArticlePostForm postId={postId} />\n        </>\n    );\n}\n\nclass ArticlePostForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSaving: false,\n            message: null,\n            error: null,\n            title: '',\n            article: '',\n            postId: props.postId || 0,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n    }\n\n    componentDidMount() {\n        const { postId, isSaving } = this.state;\n\n        if (postId !== 0) {\n            this.setState({ isSaving: true });\n            this.fetchPost(postId, 'article');\n            this.setState({ isSaving });\n        }\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSave(event) {\n        event.preventDefault();\n\n        const { title, article, postId } = this.state;\n\n        if (postId === 0) {\n            this.addPost(title, article);\n        } else {\n            this.updatePost(postId, title, article);\n        }\n    }\n\n    async addPost(title, article) {\n        if (title !== undefined && article !== undefined) {\n            this.setState({ isSaving: true, message: null, error: null });\n\n            const fetchConfig = {\n                method: 'POST',\n                mode: 'cors',\n                body: JSON.stringify({ title, article }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    token: fetchToken(),\n                },\n            };\n\n            try {\n                const result = await fetchBot(`${endPoints.articles}`, fetchConfig)\n\n                // const showPost = () => {\n                //     return (\n                //         <div className=\"post-title\">\n                //             <Link to={`/post/article/${articleId}`}>{title}</Link>\n                //         </div>\n                //     );\n                // };\n\n                const { message } = result.data;\n                // document.querySelector('#post-form-reporter').innerHTML += showPost();\n\n                this.setState({\n                    isSaving: false, message, error: null, title: '', article: '',\n                });\n            } catch (e) {\n                this.setState({ isSaving: false, message: null, error: e.message || e.error.message })\n            }\n        }\n    }\n\n    async fetchPost(postId, postType) {\n        if (postId !== undefined && postId !== 0 && postType !== undefined) {\n            this.setState({ error: null, isLoading: true });\n\n            const endPointX = (postType === 'gif') ? endPoints.gifs : endPoints.articles;\n            const fetchConfig = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    token: fetchToken(),\n                },\n            };\n\n            try {\n                const result = await fetchBot(`${endPointX}/${postId}`, fetchConfig)\n                const { title, article } = result.data;\n\n                this.setState({\n                    isLoading: false, error: null, title, article,\n                });\n            } catch (e) {\n                this.setState({ isLoading: false, error: e.message || e.error.message })\n            }\n        }\n    }\n\n    async updatePost(postId, title, article) {\n        if (postId !== undefined && title !== undefined && article !== undefined) {\n            this.setState({ isSaving: true, message: null, error: null });\n\n            const fetchConfig = {\n                method: 'PATCH',\n                mode: 'cors',\n                body: JSON.stringify({ title, article }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    token: fetchToken(),\n                },\n            };\n\n            try {\n                const result = await fetchBot(`${endPoints.articles}/${postId}`, fetchConfig)\n                const { message } = result.data;\n\n                this.setState({ isSaving: false, message, error: null });\n            } catch (e) {\n                this.setState({ isSaving: false, message: null, error: e.message || e.error.message })\n            }\n        }\n    }\n\n    render() {\n        const {\n            isSaving, message, error, title, article,\n        } = this.state;\n\n        return (\n            <>\n                <div className=\"post-form-wrapper\">\n                    {message && <span className=\"message success\">{message}</span>}\n                    {error && <span className=\"message error\">{error}</span>}\n\n                    <div className=\"post-form-display\">\n                        <form>\n                            <div className=\"form-group\">\n                                <label>\n                                    Title:\n                                    <input type=\"text\" name=\"title\" value={title} onChange={this.handleChange} required disabled={isSaving} />\n                                </label>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>\n                                    Content:\n                                    <textarea name=\"article\" rows=\"7\" value={article} onChange={this.handleChange} required disabled={isSaving} />\n                                </label>\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" onClick={this.handleSave} disabled={isSaving}>\n                                    {isSaving ? 'Saving...' : 'Save'}\n                                </button>\n                                {' '}\n                                <small><Link to='/feed'>Feed &rarr;</Link></small>\n                            </div>\n                        </form>\n                    </div>\n                    <div id=\"post-form-reporter\" />\n                </div>\n            </>\n        );\n    }\n}\n","import React from 'react';\n\nimport endPoints from '../../constants/endpoints';\nimport { fetchToken, fetchBot } from '../../constants/helpers';\nimport './PostForm.css';\nimport './Post.css';\n\nexport function CreateGifPost() {\n    return (\n        <>\n            <h3>Add Gif</h3>\n            <hr />\n            <GifPostForm />\n        </>\n    );\n}\n\n\nclass GifPostForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSaving: false,\n            message: null,\n            error: null,\n            title: '',\n            image: '',\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n    }\n\n    handleChange(event) {\n        let {\n            name, value, type, files,\n        } = event.target;\n        value = (type === 'file') ? files[0] : value;\n\n        this.setState({ [name]: value });\n    }\n\n    handleSave(event) {\n        event.preventDefault();\n\n        const { title, image } = this.state;\n        this.addPost(title, image);\n    }\n\n    async addPost(title, image) {\n        if (title !== undefined && image !== undefined) {\n            this.setState({ isSaving: true, message: null, error: null });\n\n            const formData = new FormData();\n            formData.append('title', title);\n            formData.append('image', image);\n\n            const fetchConfig = {\n                method: 'POST',\n                mode: 'cors',\n                body: formData,\n                headers: {\n                    token: fetchToken(),\n                },\n            };\n\n            try {\n                const result = await fetchBot(endPoints.gifs, fetchConfig)\n                const { message } = result.data;\n\n                this.setState({\n                    isSaving: false, message, error: null, title: '', image: '',\n                });\n            } catch (e) {\n                this.setState({ isSaving: false, message: null, error: e.message || e.error.message })\n            }\n        }\n    }\n\n    render() {\n        const {\n            isSaving, message, error, title,\n        } = this.state;\n\n        return (\n            <>\n                <div className=\"post-form-wrapper\">\n                    {message && <span className=\"message success\">{message}</span>}\n                    {error && <span className=\"message error\">{error}</span>}\n\n                    <div className=\"post-form-display\">\n                        <form>\n                            <div className=\"form-group\">\n                                <label>\n                                    Title:\n                                    <input\n                                        type=\"text\"\n                                        name=\"title\"\n                                        value={title}\n                                        onChange={this.handleChange}\n                                        required\n                                        disabled={isSaving}\n                                    />\n                                </label>\n                            </div>\n                            <div className=\"form-group\">\n                                <label>\n                                    Image:\n                                    <input type=\"file\" name=\"image\" onChange={this.handleChange} required disabled={isSaving} />\n                                </label>\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" onClick={this.handleSave} disabled={isSaving}>\n                                    {isSaving ? 'Saving...' : 'Save'}\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                    <div id=\"post-form-reporter\" />\n                </div>\n            </>\n        );\n    }\n}\n","import React from 'react';\n\nimport endPoints from '../../constants/endpoints';\nimport { fetchToken, fetchBot } from '../../constants/helpers';\n\nclass DeletePost extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isDeleting: false,\n            message: null,\n            error: null,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const { postId, postType } = this.props.match.params;\n        this.deletePost(postId, postType);\n    }\n\n    async deletePost(postId, postType) {\n        if (postId !== undefined && postType !== undefined) {\n            this.setState({ isDeleting: true });\n\n            const endPointX = (postType === 'gif') ? endPoints.gifs : endPoints.articles;\n            const fetchConfig = {\n                method: 'DELETE',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                    token: fetchToken(),\n                },\n            };\n\n            try {\n                const result = await fetchBot(`${endPointX}/${postId}`, fetchConfig)\n                this.setState({ isDeleting: false, error: null, message: result.data.message });\n            } catch (e) {\n                this.setState({ isDeleting: false, message: null, error: e.message || e.error.message })\n            }\n        }\n    }\n\n    render() {\n        const { postType } = this.props.match.params;\n        const { isDeleting, message, error } = this.state;\n\n        return (\n            <>\n                {message && <span className=\"message success\">{message}</span>}\n                {error && <span className=\"message error\">{error}</span>}\n\n                <div>\n                    <div>\n                        Are you sure you want to delete the\n                        <strong>{postType}</strong>\n                        {' '}\n                        Post?\n                    </div>\n\n                    <button type=\"submit\" onClick={this.handleSubmit} disabled={isDeleting}>\n                        {isDeleting ? 'Deleting' : 'Continue'}\n                    </button>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default DeletePost;\n","import React from 'react';\nimport endPoints from '../../constants/endpoints';\nimport { storageId, isLoggedIn, fetchBot } from '../../constants/helpers';\n\nexport function CreateUserAccount() {\n    return (\n        <>\n            <h3>Register User Account</h3>\n            <hr />\n            <UserForm />\n        </>\n    );\n}\n\nexport function EditUserAccount() {\n    return (\n        <>\n            <h3>Edit User Account</h3>\n            <hr />\n            <UserForm />\n        </>\n    );\n}\n\n\nclass UserForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSaving: false,\n            isRequesting: false,\n            message: null,\n            error: null,\n            jobRoles: [],\n            departments: [],\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            gender: 'male',\n            jobRole: '',\n            department: '',\n            address: '',\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.populateFields();\n    }\n\n    componentDidMount() {\n    }\n\n    async populateFields() {\n        this.setState({ isRequesting: true });\n        const fetchConfig = {\n            mode: 'cors',\n        };\n\n        try {\n            const result = await fetchBot(endPoints.roles, fetchConfig)\n            const result2 = await fetchBot(endPoints.departments, fetchConfig)\n\n            const jobRoles = result.data;\n            const departments = result2.data;\n\n            this.setState({\n                isRequesting: false, jobRole: jobRoles[0].name, jobRoles, department: departments[0].name, departments,\n            });\n        } catch (e) {\n            this.setState({ error: e.message || e.error.message, isRequesting: false })\n        }\n    }\n\n    handleChange(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const {\n            firstName, lastName, email, password, gender, jobRole, department, address,\n        } = this.state;\n        this.addUser(firstName, lastName, email, password, gender, jobRole, department, address);\n    }\n\n    async addUser(firstName, lastName, email, password, gender, jobRole, department, address) {\n        this.setState({ isSaving: true, message: null });\n        const fetchConfig = {\n            method: 'POST',\n            mode: 'cors',\n            body: JSON.stringify({\n                firstName, lastName, email, password, gender, jobRole, department, address,\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        try {\n            const result = await fetchBot(endPoints.signUp, fetchConfig)\n\n            const { message, token } = result.data;\n            this.setState({\n                isSaving: false,\n                message,\n                error: null,\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: '',\n                gender: '',\n                jobRole: '',\n                department: '',\n                address: '',\n            });\n\n            if (!isLoggedIn) {\n                localStorage.setItem(storageId, JSON.stringify({ token, firstName }));\n                window.location = '/feed';\n            }\n        } catch (e) {\n            this.setState({ isSaving: false, error: e.message || e.error.message })\n        }\n    }\n\n    render() {\n        const {\n            firstName, lastName, email, password, jobRole, department, address,\n            isRequesting, isSaving, message, error, jobRoles, departments,\n        } = this.state;\n\n        const jobRolesMap = jobRoles && jobRoles.map((role) => <option key={Math.random()} value={role.name}>{role.name}</option>);\n        const departmentsMap = departments && departments.map((departmenti) => (\n            <option key={Math.random()} value={departmenti.name}>\n                {departmenti.name}\n            </option>\n        ));\n\n        return (\n            <>\n                {message && <span className=\"message success\">{message}</span>}\n                {error && <span className=\"message error\">{error}</span>}\n\n                <form>\n                    <div className=\"form-group\">\n                        <label>\n                            First Name:\n                            <input\n                                type=\"text\"\n                                name=\"firstName\"\n                                value={firstName}\n                                onChange={this.handleChange}\n                                disabled={isRequesting}\n                                required\n                            />\n                        </label>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>\n                            Last Name:\n                            <input\n                                type=\"text\"\n                                name=\"lastName\"\n                                value={lastName}\n                                onChange={this.handleChange}\n                                disabled={isRequesting}\n                                required\n                            />\n                        </label>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>\n                            Email Address:\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={email}\n                                onChange={this.handleChange}\n                                disabled={isRequesting}\n                                required\n                            />\n                        </label>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>\n                            Password:\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                value={password}\n                                onChange={this.handleChange}\n                                disabled={isRequesting}\n                                required\n                            />\n                        </label>\n                    </div>\n                    <div className=\"form-group\">\n                        Gender:\n                        <br />\n                        <label>\n                            <input\n                                type=\"radio\"\n                                name=\"gender\"\n                                value=\"male\"\n                                onChange={this.handleChange}\n                                maxLength=\"6\"\n                                disabled={isRequesting}\n                                defaultChecked\n                            />\n                            {' '}\n                            Male\n                        </label>\n                        <br />\n                        <label>\n                            <input\n                                type=\"radio\"\n                                name=\"gender\"\n                                value=\"female\"\n                                onChange={this.handleChange}\n                                maxLength=\"6\"\n                                disabled={isRequesting}\n                            />\n                            {' '}\n                            Female\n                        </label>\n                        <br />\n                        <br />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>\n                            Job Role:\n                            <select name=\"jobRole\" value={jobRole} onChange={this.handleChange} disabled={isRequesting} required>\n                                {jobRolesMap}\n                            </select>\n                        </label>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>\n                            Department:\n                            <select name=\"department\" value={department} onChange={this.handleChange} disabled={isRequesting} required>\n                                {departmentsMap}\n                            </select>\n                        </label>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>\n                            Address:\n                            <textarea name=\"address\" value={address} onChange={this.handleChange} disabled={isRequesting} required />\n                        </label>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button type=\"submit\" onClick={this.handleSubmit} disabled={isRequesting}>\n                            {isSaving ? 'Saving...' : 'Save'}\n                        </button>\n                    </div>\n                </form>\n            </>\n        );\n    }\n}\n","import React from 'react';\n\nclass NotFound extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <>\n                <h3>Oops!!!</h3>\n                <div>This page no longer exists...</div>\n            </>\n        );\n    }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport {\n    Switch, Route, Link, NavLink,\n} from 'react-router-dom';\nimport { isLoggedIn, signOut } from './constants/helpers';\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\nimport './App.css';\n\nimport HomeComponent from './components/Home';\nimport FeedComponent from './components/posts/Feed';\nimport PostComponent from './components/posts/Post';\nimport { CreateArticlePost, EditArticlePost } from './components/posts/ArticlePostForm';\nimport { CreateGifPost } from './components/posts/GifPostForm';\nimport DeletePostComponent from './components/posts/DeletePost';\nimport { CreateUserAccount } from './components/users/UserForm';\nimport NotFoundComponent from './components/NotFound';\n\nclass App extends React.Component {\n    static logOut(event) {\n        event.preventDefault();\n        signOut()\n        // return <Redirect to=\"/\" />;\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"app-header\">\n                    <Link to=\"/\">\n                        <span id=\"app-logo\">TeamWork</span>\n                    </Link>\n\n                    <div className=\"nav-menu-wrapper\">\n                        <ul className=\"nav-menu\">\n                            <li><NavLink to=\"/\">Home</NavLink></li>\n                            {isLoggedIn && (\n                                <>\n                                    <li><NavLink to=\"/feed\">Feed</NavLink></li>\n                                    <li><NavLink to=\"/article/create\">Add Article</NavLink></li>\n                                    <li><NavLink to=\"/gif/create\">Add Gif</NavLink></li>\n                                    <li><NavLink to=\"/user/create\">Add User</NavLink></li>\n                                    <li><NavLink to=\"#\" onClick={App.logOut}>Logout</NavLink></li>\n                                </>\n                            )}\n                        </ul>\n                    </div>\n                </header>\n\n                <div className=\"app-content-wrapper\">\n                    <Switch>\n                        <Route path=\"/\" component={HomeComponent} exact />\n                        <AuthenticatedRoute path=\"/feed\" component={FeedComponent} exact />\n                        <AuthenticatedRoute path=\"/article/create\" component={CreateArticlePost} exact />\n                        <AuthenticatedRoute path=\"/article/edit/:postId\" component={EditArticlePost} exact />\n                        <AuthenticatedRoute path=\"/gif/create\" component={CreateGifPost} exact />\n                        <AuthenticatedRoute path=\"/post/:postType/:postId\" component={PostComponent} exact />\n                        <AuthenticatedRoute path=\"/:postType/delete/:postId\" component={DeletePostComponent} exact />\n                        <Route path=\"/user/create\" component={CreateUserAccount} exact />\n                        <Route path=\"*\" component={NotFoundComponent} />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n                        + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker.register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl).then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then((registration) => {\n                registration.unregister().then(() => {\n                    window.location.reload();\n                });\n            });\n        } else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl, config);\n        }\n    }).catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}